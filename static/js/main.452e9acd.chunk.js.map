{"version":3,"sources":["Components/Form.js","Components/Todo.js","Components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","onChange","e","console","log","target","value","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","App","useState","setStatus","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAkCeA,EA/BF,SAAC,GAAmD,IAAhDC,EAA+C,EAA/CA,aAAcC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAc5C,OACI,iCACA,uBAAOC,SAdc,SAACC,GACxBC,QAAQC,IAAIF,EAAEG,OAAOC,OACrBT,EAAaK,EAAEG,OAAOC,QAYeC,KAAK,OAAOC,UAAU,eACzD,wBAAQC,QAXc,SAACP,GACzBA,EAAEQ,iBACFX,EAAS,GAAD,mBACHD,GADG,CAEN,CAACa,KAAMX,EAAWY,WAAW,EAAOC,GAAoB,IAAhBC,KAAKC,aAE/ClB,EAAa,KAKyBW,UAAU,cAAcD,KAAK,SAAjE,SACE,mBAAGC,UAAU,yBAEf,qBAAKA,UAAU,SAAf,SACE,yBAAQQ,KAAK,QAAQR,UAAU,cAA/B,UACE,wBAAQF,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,cAAd,kC,OCIGW,EA7BF,SAAC,GAAqC,IAAnCN,EAAkC,EAAlCA,KAAMO,EAA4B,EAA5BA,KAAMpB,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAgB/B,OACI,sBAAKS,UAAU,OAAf,UACI,oBAAIA,UAAS,oBAAeU,EAAKN,UAAY,YAAc,IAA3D,SAAkED,IAClE,wBAAQF,QAdQ,WACpBV,EAASD,EAAMqB,KAAI,SAAAC,GACf,OAAGA,EAAKP,KAAOK,EAAKL,GAChB,2BACOO,GADP,IAEIR,WAAYQ,EAAKR,YAGlBQ,OAM2BZ,UAAU,eAA5C,SACA,mBAAGA,UAAU,mBAEb,wBAAQC,QApBM,WAClBV,EAASD,EAAMuB,QAAO,SAACC,GAAD,OAAQA,EAAGT,KAAOK,EAAKL,QAmBTL,UAAU,YAA1C,SACA,mBAAGA,UAAU,uBCHVe,EAlBE,SAAC,GAAyB,IAAvBzB,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAEvB,OACE,qBAAKS,UAAU,iBAAf,SACE,oBAAIA,UAAU,YAAd,SACGV,EAAMqB,KAAI,SAAAD,GAAI,OACb,cAAC,EAAD,CAECP,KAAMO,EAAKP,KACXZ,SAAUA,EACVmB,KAAMA,EACNpB,MAAOA,GAJFoB,EAAKL,YCkBRW,MAvBf,WACE,MAAkCC,mBAAS,IAA3C,mBAAOzB,EAAP,KAAkBH,EAAlB,KACA,EAA0B4B,mBAAS,IAAnC,mBAAO3B,EAAP,KAAcC,EAAd,KACA,EAA2B0B,mBAAS,OAApC,mBAAcC,GAAd,WACA,EAA0CD,mBAAS,IAAnD,mBACA,OADA,UAEE,sBAAKjB,UAAU,MAAf,UACE,iCACE,6CAEF,cAAC,EAAD,CACCR,UAAWA,EACXF,MAAOA,EACPC,SAAUA,EACVF,aAAcA,EACd6B,UAAWA,IACZ,cAAC,EAAD,CACA3B,SAAUA,EACVD,MAAOA,QCZE6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.452e9acd.chunk.js","sourcesContent":["import React from \"react\";\n\n\nconst Form = ( { setInputText, todos, setTodos, inputText }) => {\n\n    const inputTextHandler = (e) => {\n      console.log(e.target.value);\n      setInputText(e.target.value);\n    };\n    const submitTodoHandler = (e) => {\n      e.preventDefault();\n      setTodos([\n        ...todos, \n        {text: inputText, completed: false, id: Math.random() * 1000}\n      ])\n      setInputText('');\n    }\n    return (\n        <form>\n        <input onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\n        <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\n          <i className=\"fas fa-plus-square\"></i>\n        </button>\n        <div className=\"select\">\n          <select name=\"todos\" className=\"filter-todo\">\n            <option value=\"all\">All</option>\n            <option value=\"completed\">Completed</option>\n            <option value=\"uncompleted\">Uncompleted</option>\n          </select>\n        </div>\n      </form>\n    ); \n};\n\nexport default Form;","import React from 'react';\n\nconst Todo = ({ text, todo, todos, setTodos }) => {\n    //events\n    const deleteHandler = () => {\n        setTodos(todos.filter((el) => el.id !== todo.id));\n    };\n    const completeHandler = () => {\n        setTodos(todos.map(item => {\n            if(item.id === todo.id){\n                return{\n                    ...item, \n                    completed: !item.completed,\n                };\n            }\n            return item;\n        }))\n    }\n    return(\n        <div className=\"todo\">\n            <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>{text}</li>\n            <button onClick={completeHandler} className=\"complete-btn\">\n            <i className=\"fas fa-check\"></i>\n            </button>\n            <button onClick={deleteHandler} className=\"trash-btn\">\n            <i className=\"fas fa-trash\"></i>\n            </button>\n        </div>\n    );\n}\n\nexport default Todo;","import React from 'react';\n//Import Components\nimport Todo from \"./Todo\";\n\nconst TodoList = ({ todos, setTodos }) => {\n\n    return (\n      <div className=\"todo-container\">\n        <ul className=\"todo-list\">\n          {todos.map(todo => (\n            <Todo \n             key={todo.id} \n             text={todo.text} \n             setTodos={setTodos} \n             todo={todo}\n             todos={todos} />\n          ))}\n        </ul>\n      </div>\n    );\n};\n\nexport default TodoList;","\nimport './App.css';\nimport React, { useState } from 'react';\nimport Form from \"./Components/Form\";\nimport TodoList from \"./Components/TodoList\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status,setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Todo List</h1>\n      </header>\n      <Form \n       inputText={inputText} \n       todos={todos} \n       setTodos={setTodos} \n       setInputText={setInputText} \n       setStatus={setStatus}/>\n      <TodoList \n      setTodos={setTodos} \n      todos={todos}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}